%%
%% This is file `tubsstyle.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% ../tubsvers.inc  (with options: `default')
%% tubsstyle.dtx  (with options: `package')
%% 
%% This is a generated file.
%% 
%% Copyright (C) 2011 by Enrico Jörns
%% 
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either
%% version 1.2 of this license or (at your option) any later
%% version. The latest version of this license is in:
%% 
%%   http://www.latex-project.org/lppl.txt
%% 
%% and version 1.2 or later is part of all distributions of
%% LaTeX version 1999/12/01 or later.
%% 
\RequirePackage{ifthen}
\RequirePackage{scrlfile}%TODO: KOMA-Check?
\RequirePackage{etoolbox}%
\begingroup
  \makeatletter
  \ifx\tubslatexVersion\undefined
    \newcommand*{\check@tubslatexVersion}[1]{%
      \gdef\tubslatexVersion{#1}%
    }%
  \else
    \newcommand*{\check@tubslatexVersion}[1]{%
      \def\@tempa{#1}%
      \ifx\tubslatexVersion\@tempa\else
        \@latex@warning@no@line{%
          \noexpand\tubslatexVersion\space is
          `\tubslatexVersion',\MessageBreak
          but `#1' was expected!\MessageBreak
          You should not use classes, packages or files
          from\MessageBreak
          different tubslatex versions%
        }%
      \fi
    }
  \fi
  \check@tubslatexVersion{2020/11/30 v1.3.4-r149 tubslatex}%
\endgroup
\providecommand{\tubslatex}{tubs\LaTeX}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{tubsstyle}[\tubslatexVersion, file v0.1 Hintergrund-Darstellung für tubslatex]
\RequirePackage{xkeyval}
\RequirePackage{ifthen}
\newboolean{tubsstyle@twoside}\setboolean{tubsstyle@twoside}{false}
\define@boolkey{tubsstyle.sty}[ts@]{twoside}[true]{%
  \ifts@twoside
    \setboolean{tubsstyle@twoside}{true}
  \else
    \setboolean{tubsstyle@twoside}{false}
  \fi
}
\newboolean{tubsstyle@bottomsender}\setboolean{tubsstyle@bottomsender}{false}
\define@choicekey*{tubsstyle.sty}{sender}[\val\nr]{top,bottom}{%
  \ifcase\nr\relax
    \setboolean{tubsstyle@bottomsender}{false}
  \or
    \setboolean{tubsstyle@bottomsender}{true}
  \fi
}
\newboolean{tubsstyle@fullline}\setboolean{tubsstyle@fullline}{false}
\define@boolkey{tubsstyle.sty}[ts@]{fullline}[true]{%
  \ifts@fullline
    \setboolean{tubsstyle@fullline}{true}
  \else
    \setboolean{tubsstyle@fullline}{false}
  \fi
}
\def\ts@post@process{}
\define@boolkey{tubsstyle.sty}[ts@]{scifiposter}[true]{%
  \ifts@scifiposter
    \def\ts@post@process{
      \disable@keys{bglayout}{designhelper}%
      \let\bgelement\undefined
    }
  \else
    \def\ts@post@process{
      \disable@keys{bglayout}{bgcolor}%
    }
  \fi
}
\DeclareOption*{%
  \PackageWarning{tubsstyle}{Unknown option `\CurrentOption'}{}%
}
\ExecuteOptionsX{sender=top, twoside=false, scifiposter=false, fullline=false}
\ProcessOptionsX*\relax
\RequirePackage{tubslogo}
\RequirePackage{tubscolors}
\RequirePackage{tubstypearea}
\begingroup
\let\OldProvidesPackage\ProvidesPackage
\def\ProvidesPackage#1[#2]{\OldProvidesPackage#1[#2]\endinput}
\RequirePackage{eso-pic}[2010/10/06]
\let\ProvidesPackage\OldProvidesPackage
\newif\if@OldEsoPicVersion
\@ifpackagelater{eso-pic}{2010/10/06}{%
  \global\@OldEsoPicVersionfalse
}{%
  \global\@OldEsoPicVersiontrue
}
\global\expandafter\let\csname ver@eso-pic.sty\endcsname\relax
\global\expandafter\let\csname opt@eso-pic.sty\endcsname\relax
\endgroup
\if@OldEsoPicVersion%
  \RequirePackage{tubsbox}
  \RequirePackage{eso-pic}
\else%
  \RequirePackage{eso-pic}
  \RequirePackage{tubsbox}
\fi%
\newlength{\tmp@posx}
\newlength{\tmp@posy}
\newboolean{tubsstyle@logoright}\setboolean{tubsstyle@logoright}{false}
\newboolean{tubsstyle@singlepage}\setboolean{tubsstyle@singlepage}{false}
\newboolean{tubsstyle@designhelper}\setboolean{tubsstyle@designhelper}{false}
\newif\iftubslogo@inside\tubslogo@insidefalse
\newif\iftubslogo@plain\tubslogo@plainfalse
\newif\iftubslogo@expandinbcorr\tubslogo@expandinbcorrfalse
\AtBeginDocument{%
  \@ifpackageloaded{todonotes}{%
    \reversemarginpar
    \setlength{\marginparwidth}{2cm}
  }{}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\providecommand{\if@tubs@oddpage}[2]{%
  \ifthenelse{\boolean{tubsstyle@twoside}}{%
    \Ifthispageodd{#1}{#2}%
  }{#1}%
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand\tubs@topline{%
  % Setze Bindungs-Offset abhängig von oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubspage@bcor}%
  }{%
    \setlength{\tmp@posx}{0mm}%
  }%
  % Randbreite dazuaddieren, wenn nicht Option 'fullline' gewählt wurde
  \ifthenelse{\boolean{tubsstyle@fullline}}{}{%
    \addtolength{\tmp@posx}{\tubsborderwidth}%
  }
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\paperheight-(\tubsborderwidth+\thetubspage@gausssum\tubsgaussbaseheight)}%
  }{%
    \setlength{\tmp@posy}{\tubsborderwidth+\thetubspage@gausssum\tubsgaussbaseheight}%
  }%
  \ifthenelse{\boolean{tubsstyle@fullline}}{%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
      {{\color{tuRed}\rule{\paperwidth-\tubspage@bcor}{0.24ex}}}%
  }{%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
      {{\color{tuRed}\rule{\paperwidth-2\tubsborderwidth-\tubspage@bcor}{0.24ex}}}%
  }
}
\newcommand\tubs@tubslogo@calcpos[3]{%
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\paperheight%
      -(\tubsborderwidth+\thetubspage@gausssum\tubsgaussbaseheight-0.25\tubslogoHeight)%
      -\tubslogoHeight}%
  }{%
    \setlength{\tmp@posy}{%
      \tubsborderwidth+\thetubspage@gausssum\tubsgaussbaseheight-0.25\tubslogoHeight}%
  }%
  % Berechne x-Position, abhängig von oddness
  \if@tubs@oddpage{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\tubspage@bcor}%
    }{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth}%
      \setboolean{tubsstyle@logoright}{true}%
    }%
  }{%
    \ifthenelse{\equal{#1}{left}}{%
      \setlength{\tmp@posx}{\paperwidth-\tubslogoWidth-\tubspage@bcor}%
      \setboolean{tubsstyle@logoright}{true}%
    }{%
      \setlength{\tmp@posx}{0cm}%
    }%
  }%
  \setlength{#2}{\tmp@posx}%
  \setlength{#3}{\tmp@posy}%
}
\define@choicekey{tubslogo}{pos}[\val\nr]{left,right,inside,outside}{%
  \ifcase\nr\relax%
    \global\tubslogo@insidefalse%
  \or%
    \global\tubslogo@insidetrue%
  \or%
    \global\tubslogo@insidefalse%
  \or%
    \global\tubslogo@insidetrue%
  \fi%
}
\define@key{tubslogo}{left}[true]{%
  \setkeys{tubslogo}{pos=left}%
}
\define@key{tubslogo}{right}[true]{%
  \setkeys{tubslogo}{pos=right}%
}
\define@key{tubslogo}{inside}[true]{%
  \setkeys{tubslogo}{pos=inside}%
}
\define@key{tubslogo}{outside}[true]{%
  \setkeys{tubslogo}{pos=outside}%
}
\define@boolkey{tubslogo}{plain}[true]{%
  \ifKV@tubslogo@plain%
    \tubslogo@plaintrue%
  \else%
    \tubslogo@plainfalse%
  \fi%
}
\define@boolkey{tubslogo}{inbcorr}[true]{%
  \ifKV@tubslogo@inbcorr%
    \tubslogo@expandinbcorrtrue
  \else%
    \tubslogo@expandinbcorrfalse
  \fi%
}
\setkeys{tubslogo}{pos=left}%
\newcommand\tubs@tubslogo[1][]{%
  \setkeys{tubslogo}{#1}%
  \iftubslogo@inside%
    \tubs@tubslogo@calcpos{right}{\tmp@posx}{\tmp@posy}%
  \else%
    \tubs@tubslogo@calcpos{left}{\tmp@posx}{\tmp@posy}%
  \fi%
  \iftubslogo@expandinbcorr
    \if@tubs@oddpage{%
      \iftubslogo@inside\else
        \addtolength\tmp@posx{-\tubspage@bcor}%
        \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
          \fboxsep0mm\colorbox{tuRed}{\parbox[b][\tubslogoHeight]{\tubslogoWidth+\tubspage@bcor}{~}}}%
        \addtolength\tmp@posx{\tubspage@bcor}%
      \fi
    }{%
      \iftubslogo@inside\else
        \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
          \fboxsep0mm\colorbox{tuRed}{\parbox[b][\tubslogoHeight]{\tubslogoWidth+\tubspage@bcor}{~}}}%
      \fi
    }%
  \fi
  \iftubslogo@plain%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
      \fboxsep0mm\colorbox{tuRed}{\parbox[b][\tubslogoHeight]{\tubslogoWidth}{~}}}%
  \else%
    \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
      \tubslogo}%
  \fi%
}
\newcommand\tubs@logo[1]{%
  \def\@ragged{\raggedleft}%
  % Berechene y-Position, abhängig von Raster-Orientierung (topdown/bottomsender)
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{\tubsborderwidth}%1
  }{%
    \ifts@scifiposter
      \setlength{\tmp@posy}{\tubscommunicationheight+1.5\tubsborderwidth}%1
    \else
      \setlength{\tmp@posy}{\tubscommunicationheight+2\tubsborderwidth}%1
    \fi
  }%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{\tubsborderwidth+\tubspage@bcor}%
      \def\@ragged{\raggedright}%
    }{%
      \setlength{\tmp@posx}{0.5\paperwidth+0.5\tubspage@bcor}%
    }%
  }{%
    \ifthenelse{\boolean{tubsstyle@logoright}}{%
      \setlength{\tmp@posx}{\tubsborderwidth}%
      \def\@ragged{\raggedright}%
    }{%
      \setlength{\tmp@posx}{0.5\paperwidth-0.5\tubspage@bcor}%
    }%
  }%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
    \newdimen\tmp@logoheight
    \ifts@scifiposter
      \setlength\tmp@logoheight{\tubssenderheight-1.5\tubsborderwidth}%
    \else
      \setlength\tmp@logoheight{\tubssenderheight-2\tubsborderwidth}%
    \fi
    \parbox[b][\tmp@logoheight][c]%
      {0.5\paperwidth-0.5\tubspage@bcor-\tubsborderwidth}{%
      \setkeys{Gin}{height=\tmp@logoheight,width=0.5\textwidth,keepaspectratio}%
      \usekomafont{institute}\@ragged%
      \leavevmode\color{tuRed}#1%
    }%
  }%
}
\newcounter{tmp@calc@bgpos}
\newcounter{tmpb@calc@bgpos}
\newcommand\tubs@background[2]{%
  % Makro |\@inv@arg| wird benutzt, um Argument 'inverted' an
  % |calc@gauss@elementpos| zu übergeben, falls bottomsender-Layout gewählt wurde.
  \def\@inv@arg{}%
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \def\@inv@arg{inverted}%
  }{}%
  % calculate and set y pos (origin: lower left corner)
  \calc@gauss@elementpos[\@inv@arg]{tmp@calc@bgpos}{#1}%
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
    \setlength{\tmp@posy}{%
      \tubssenderheight-\thetmp@calc@bgpos\tubsgaussbaseheight}% pos hack
  }{%
    \setlength{\tmp@posy}{%
      \tubsborderwidth-\thetmp@calc@bgpos\tubsgaussbaseheight}% pos hack
  }%
  % calculate x pos of logo and line depending on oddness
  \if@tubs@oddpage{%
    \setlength{\tmp@posx}{\tubsborderwidth+\tubspage@bcor}%
  }{%
    \setlength{\tmp@posx}{\tubsborderwidth}%
  }%
  % calculate and set height
  \calc@gauss@elementpos[\@inv@arg]{tmpb@calc@bgpos}{#1+#2}%
  % additional fixment hack because of inverted y orientation
  \setcounter{tmp@calc@bgpos}{\thetmpb@calc@bgpos-\thetmp@calc@bgpos}%
  \addtolength{\tmp@posy}{%
    -\thetmp@calc@bgpos\tubsgaussbaseheight%
    +\thetubspage@gausssum\tubsgaussbaseheight}%
}
\newcommand\tubs@background@colored[3]{%
  \tubs@background{#2}{#3}%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{\setlength\fboxsep{0mm}\colorbox{#1}{%
      \parbox[b][\thetmp@calc@bgpos\tubsgaussbaseheight]%
        {\paperwidth-2\tubsborderwidth-\tubspage@bcor}{~}}%
    }}%
}
\newlength{\@image@xorig}
\newlength{\@image@xcalc}
\newlength{\@image@yorig}
\newlength{\@image@ycalc}
\newcommand\tubs@background@image[3]{%
  \def\@img@to@insert{}%
  \tubs@background{#2}{#3}%
  \ifthenelse{\equal{\tubstyle@imagefit}{scaled}}{%
    \def\@img@to@insert{%
      \includegraphics*[%
        height=\thetmp@calc@bgpos\tubsgaussbaseheight,
        width=\paperwidth-2\tubsborderwidth-\tubspage@bcor]{#1}
    }
  }{\ifthenelse{\equal{\tubstyle@imagefit}{cropped}}{%
      % Ermittelt, ob das Bild an den Seiten oder oben und unten beschnitten
      % werden muss, um in den Darstellungsbereich zu passen
      % Dazu wird die Höhe des auf korrekte Breite skalierten Bildes
      % mit der Höhe des Darstellu  ngsbereichs verglichen und entsprechend
      % eine crop-Option gesetzt.
      \settoheight{\@image@ycalc}{%
        \includegraphics*[width=\paperwidth-2\tubsborderwidth-\tubspage@bcor]{#1}}
      \ifthenelse{\lengthtest{\@image@ycalc>\thetmp@calc@bgpos\tubsgaussbaseheight}}{%
        \renewcommand{\tubstyle@imagefit}{cropy}
      }{%
        \renewcommand{\tubstyle@imagefit}{cropx}
      }
    }{}
    \ifthenelse{\equal{\tubstyle@imagefit}{cropy}}{%
    % Berechne abzuschneidende Ränder (oben+unten)
    % Dazu wird die Differenz zwischen Darstellungsbereich und Höhe des
    % korrekt auf die Breite skalierten Bildes berechnet und mit dem
    % ermittelten Skalierungsfaktor multipliziert, sowie durch 2 geteilt.
    % Das Ergebnis wir dann einmal am oberen und einmal am unteren Teil
    % des (Original-)Bildes mit Hilfe der 'trim'-Option abgeschnitten.
    \settoheight{\@image@yorig}{%
      \includegraphics*{#1}}
    \settoheight{\@image@ycalc}{%
      \includegraphics*[width=\paperwidth-2\tubsborderwidth-\tubspage@bcor]{#1}}
    \setlength{\@image@ycalc}{(\@image@ycalc-(\thetmp@calc@bgpos\tubsgaussbaseheight))*\ratio{\@image@yorig}{\@image@ycalc}}
    \setlength{\@image@ycalc}{0.5\@image@ycalc}
    \def\@img@to@insert{%
      \includegraphics*[%
        width=\paperwidth-2\tubsborderwidth-\tubspage@bcor,
        trim=0pt {\@image@ycalc} 0pt {\@image@ycalc}]{#1}
    }
    }{\ifthenelse{\equal{\tubstyle@imagefit}{cropx}}{%
      \settowidth{\@image@xorig}{%
        \includegraphics*{#1}}
      \settowidth{\@image@xcalc}{%
        \includegraphics*[height=\thetmp@calc@bgpos\tubsgaussbaseheight]{#1}}
      \setlength{\@image@xcalc}{(\@image@xcalc-(\paperwidth-2\tubsborderwidth-\tubspage@bcor))*\ratio{\@image@xorig}{\@image@xcalc}}
      \setlength{\@image@xcalc}{0.5\@image@xcalc}
      \def\@img@to@insert{%
        \includegraphics*[%
          height=\thetmp@calc@bgpos\tubsgaussbaseheight,
          trim={\@image@xcalc} 0pt {\@image@xcalc} 0pt]{#1}
      }
    }{}
  }}
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){\@img@to@insert}%
}
\newcommand{\tubs@draw@topline}{}
\newcommand{\tubs@draw@tubslogo}{}
\newcommand{\tubs@draw@logo}{}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newcommand{\showtopline}{\renewcommand{\tubs@draw@topline}{%
  \g@addto@macro{\@next@shipout}{\tubs@topline}}}
\newif\if@tubs@showlogo\@tubs@showlogofalse
\newcommand{\showtubslogo}[1][]{%
  \@tubs@showlogotrue%
  \renewcommand{\tubs@draw@tubslogo}{%
    \thispagestyle{empty}%
    \g@addto@macro{\@next@shipout}{\tubs@tubslogo[#1]}}%
}
\newcommand{\showlogo}[1]{\renewcommand{\tubs@draw@logo}{%
  \g@addto@macro{\@next@shipout}{\tubs@logo{#1}}}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\def\tubs@bg@cmd{}
\newcommand{\tubstyle@imagefit}{cropped}
\newcounter{tubs@yseg@cnt}
\define@key{bgelement}{bgcolor}{%
  \edef\tubs@bg@cmd@args{{#1}{\thetubs@yseg@cnt}{\@current@height}}
  \expandafter\def\expandafter\tubs@bg@cmd\expandafter{%
    \expandafter\tubs@background@colored\tubs@bg@cmd@args}
}
\define@key{bgelement}{bgimage}{%
  \edef\tubs@bg@cmd@args{{#1}{\thetubs@yseg@cnt}{\@current@height}}
  \expandafter\def\expandafter\tubs@bg@cmd\expandafter{%
    \expandafter\tubs@background@image\tubs@bg@cmd@args}
}
\define@choicekey{bgelement}{imagefit}[\val\nr]{%
        default,scaled,clipped,cropped,clipx,hclip,clipy,vclip,fitheight,fitwidth}{%
  \ifcase\nr\relax
    % default
    \PackageInfo{tubsstyle}{%
      Option 'imagefit' not set. Using standard value 'clipped'.
    }
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % scaled
    \renewcommand{\tubstyle@imagefit}{scaled}
  \or
    % clipped
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % cropped
    \renewcommand{\tubstyle@imagefit}{cropped}
  \or
    % clipx
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % cropx
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % clipy
    \renewcommand{\tubstyle@imagefit}{cropy}
  \or
    % cropy
    \renewcommand{\tubstyle@imagefit}{cropy}
  \or
    % fitheight
    \renewcommand{\tubstyle@imagefit}{cropx}
  \or
    % fitwidth
    \renewcommand{\tubstyle@imagefit}{cropy}
  \fi
}
\newcommand{\bgelement}[2][]{
  \def\@current@height{#2}
  \setkeys*{bgelement}{#1}
  % Führt das gespeicherte Hintergrund-Kommando mit den gespeicherten Argumenten aus.
  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \expandafter\renewcommand\expandafter\tubstyle@imagefit\expandafter{%
      \tubstyle@imagefit}}
  \expandafter\g@addto@macro\expandafter\@next@shipout\expandafter{%
    \tubs@bg@cmd}
  \addtocounter{tubs@yseg@cnt}{#2}
}
\let\bgsegment\bgelement
\define@choicekey{bglayout}{pages}[\val\nr]{all,single}{%
  \ifcase\nr\relax
    \setboolean{tubsstyle@singlepage}{false}
  \or
    \setboolean{tubsstyle@singlepage}{true}
  \fi
}
\define@boolkey{bglayout}{designhelper}[true]{%
  \setboolean{tubsstyle@designhelper}{true}
}
\define@key{bglayout}{bgcolor}[tuGray20]{%
  \g@addto@macro{\@@next@shipout}{%
    \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
      \put(0,\LenToUnit{\tubssenderheight}){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubssenderheight]%
            {\paperwidth}{~}}%
      }}%
    }{%
      \put(0,0){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubssenderheight]%
            {\paperwidth}{~}}%
      }}%
    }%
  }
}
\define@key{bglayout}{border}[tuBlack]{%
  \g@addto@macro{\@@next@shipout}{%
    \ifthenelse{\boolean{tubsstyle@bottomsender}}{%
      \put(0,\LenToUnit{\tubssenderheight}){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubssenderheight]%
            {\paperwidth}{~}}%
      }}%
    }{%
      \put(0,0){{%
        \setlength\fboxsep{0mm}\colorbox{#1}{%
          \parbox[b][\paperheight-\tubssenderheight]%
            {\paperwidth}{~}}%
      }}%
    }%
  }
}
\newcommand*{\@@next@shipout}{}
\newcommand{\@layout@pre}[1]{%
  \@tubs@showlogofalse
  \def\tubs@draw@topline{}
  \def\tubs@draw@tubslogo{}
  \def\tubs@draw@logo{}
  \def\tubs@draw@designhelper{}
  \def\@next@shipout{}
  \def\@@next@shipout{} % Makro to set content after keys
  \def\@layout@preset{}
  \setcounter{tubs@yseg@cnt}{1}
  \setkeys*{tubsstyle.sty}{#1}
  \edef\tmp@KV{{bglayout}{pages=all,\XKV@rm}}
  \expandafter\setkeys\tmp@KV
  \g@addto@macro{\@next@shipout}{\@@next@shipout}
  \ClearShipoutPicture
}
\newcommand\only@ifshipout@allowed[1]{%
  \ifdefined\tikzifexternalizing
    \tikzifexternalizing{}{%
      #1%
    }%
  \else
    #1%
  \fi
}
\newcommand{\@layout@post}{%
  \tubs@draw@topline
  \tubs@draw@tubslogo
  \tubs@draw@logo
  \ifthenelse{\boolean{tubsstyle@designhelper}}{%
    \setboolean{tubsstyle@designhelper}{false}%
    \showdesignhelper%
  }{}%
  \tubs@draw@designhelper% TODO: keep?
  \only@ifshipout@allowed{%
    \ifthenelse{\boolean{tubsstyle@singlepage}}{%
      \AddToShipoutPicture*{\@next@shipout}%
    }{%
      \AddToShipoutPicture{\@next@shipout}%
    }%
  }%
}
\newcommand{\bglayout}[2][]{%
  \@layout@pre{#1}
  #2
  \@layout@post
}
\newcommand\tubs@background@designhelper[1]{%
  \tubs@background{#1}{1}%
  \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy})%
    {{\setlength\fboxsep{0mm}\fbox{%
      \parbox[b][\thetmp@calc@bgpos\tubsgaussbaseheight]%
        {\paperwidth-2\tubsborderwidth-\tubspage@bcor}{~}}%
    }}%
}
\newcommand{\showdesignhelper}{%
  \def\tubs@draw@designhelper{%
    \g@addto@macro{\@next@shipout}{%
      % Rahmen für links und rechts positioniertes TU-Logo
      \tubs@tubslogo@calcpos{left}{\tmp@posx}{\tmp@posy}%
      \addtolength{\tmp@posy}{\tubslogoHeight}%
      \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
        \fboxsep0mm\fbox{\parbox[t][\tubslogoHeight]{\tubslogoWidth}{~}}}%
      \tubs@tubslogo@calcpos{right}{\tmp@posx}{\tmp@posy}%
      \addtolength{\tmp@posy}{\tubslogoHeight}%
      \put(\LenToUnit{\tmp@posx},\LenToUnit{\tmp@posy}){%
        \fboxsep0mm\fbox{\parbox[t][\tubslogoHeight]{\tubslogoWidth}{~}}}%
      %
      \tubs@background@designhelper{1}%
      \tubs@background@designhelper{2}%
      \tubs@background@designhelper{3}%
      \tubs@background@designhelper{4}%
      \tubs@background@designhelper{5}%
      \tubs@background@designhelper{6}%
      \tubs@background@designhelper{7}%
      \tubs@background@designhelper{8}%
      %
    }%
  }%
}
\newcommand{\defbglayout}[3][]{%
  \expandafter\newcommand\csname @bg@layout@options@#2\endcsname{#1}
  \expandafter\newcommand\csname @bg@layout@#2\endcsname{#3}
}
\newcommand{\usebglayout}[2][]{%
  \expandafter\edef\expandafter\@curr@opts\expandafter{%
    \expandafter\csname @bg@layout@options@#2\endcsname}
  \expandafter\bglayout\expandafter[\@curr@opts]{\csname @bg@layout@#2\endcsname}
}
\newenvironment{gausspage}[1][]{%
  \clearpage
  \@layout@pre{pages=single,#1}
  \gausspagesetup[nosep,#1]
  \sffamily
}{%
  \@layout@post
  ~\newpage
}
\newenvironment{segment}[2][]{%
  \def\@current@height{#2}% TODO: unschön
  \setkeys*{bgelement}{#1}% Muss vorher gesetzt werden, um |\XKV@rm| nutzen zu können
  % Sorgt dafür, dass alle Argumente erst expandiert und dann eingefügt werden!
  % TODO...
  \def\@extra@opt{}
  \ifthenelse{\boolean{tubsstyle@bottomsender}}{}{%
    \if@tubs@showlogo%
      \def\@extra@opt{logosep}
    \else%
      \def\@extra@opt{}
    \fi%
  }
  \edef\@tubs@arg{[\@extra@opt,\XKV@rm]{1}{\thetubs@yseg@cnt}{6}{#2}}
  \bgelement{#2}%TODO: how to skip gaussbox related options?
  % Erzeuge gausbox
  \expandafter\gaussbox\@tubs@arg
}{%
  \endgaussbox
}
\newenvironment{modulepage}[1][]{%
  \clearpage
  \@layout@pre{pages=single,bgcolor=tuSecondaryLight,#1}%
  \showtubslogo
  \sffamily
  \modcontainer[#1]%
}{%
  \endmodcontainer
  \@layout@post
  ~\newpage
}
\ts@post@process
\endinput
%%
%% End of file `tubsstyle.sty'.
